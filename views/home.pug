doctype html
html(lang="ko")
  head
    meta(charset="UTF-8")
    meta(name="viewport" content="width=device-width, initial-scale=1.0")
    title Today's Snack
    link(href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;700&display=swap" rel="stylesheet")
    link(rel="stylesheet" href="/css/style.css")
    script(src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js")

  body
    .header
      h1.logo Rapa
      h2.title Today's Snack
      // 로그인 상태에 따라 버튼 설정
      button.login-button(id="loginButton") LOGIN

    // 로그인 모달
    #loginModal.modal
      .modal-content
        span.close(onclick="closeModal()") &times;
        h2.centered LOGIN
        form(onsubmit="submitLogin(event)")
          label(for="username") Username:
          input#username(type="text" name="username" required)
          label(for="password") Password:
          input#password(type="password" name="password" required)
          button.btn-primary(type="submit") login

    // 본문 내용이 추가될 컨테이너
    main.container.posts.mt-0(id="contentContainer")
      p.alert.alert-info(role='alert' id="loginAlert")
        | 로그인 후에 내용을 볼 수 있습니다.

    // JavaScript 코드 직접 포함
    script.
      function openModal() {
        document.getElementById("loginModal").style.display = "block";
      }

      function closeModal() {
        document.getElementById("loginModal").style.display = "none";
      }

      function logout() {
        document.cookie = "user=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;";
        location.reload();
      }

      async function submitLogin(event) {
        event.preventDefault();
        const username = document.getElementById("username").value;
        const password = document.getElementById("password").value;

        try {
          const response = await fetch("/login", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({ username, password }),
          });

          const result = await response.json();
          if (response.ok) {
            alert("로그인 성공!");
            closeModal();
            location.reload();
          } else {
            alert(result.message);
          }
        } catch (error) {
          console.log("로그인 요청 중 오류 발생:", error);
          alert("서버 오류. 나중에 다시 시도해 주세요.");
        }
      }

      // 페이지 로드 시 쿠키를 통해 로그인 상태 확인 및 버튼 설정
      window.addEventListener("load", () => {
        const cookieValue = document.cookie
          .split("; ")
          .find((row) => row.startsWith("user="))
          ?.split("=")[1];

        const isLoggedIn = cookieValue === "true";
        const loginButton = document.getElementById("loginButton");
        if (isLoggedIn) {
          loginButton.textContent = "LOGOUT";
          loginButton.setAttribute("onclick", "logout()");

          // 로그인 상태일 때 콘텐츠 추가
          document.getElementById("loginAlert").style.display = "none";

          // new.pug와 list.pug의 내용을 JavaScript로 동적으로 추가
          document.getElementById("contentContainer").innerHTML += `
            <div>
              <!-- new.pug의 내용 -->
              <form class="form-inline" action="/post" method="POST" enctype="multipart/form-data" id="snackForm">
                <div class="row">
                  <div class="col">
                    <label for="snackName">과자 이름*</label>
                    <input type="text" id="snackName" name="snackName" required>
                  </div>
                  <div class="col">
                    <label for="photo">사진 첨부</label>
                    <input type="file" id="photo" name="photo">
                  </div>
                </div>
              </form>
              <!-- list.pug의 내용 -->
              <div class="card my-3 col-12">
                <div class="card-body">
                  <h5>과자 리스트</h5>
                  <p>여기에 과자 리스트가 표시됩니다.</p>
                </div>
              </div>
            </div>
          `;
        } else {
          loginButton.textContent = "LOGIN";
          loginButton.setAttribute("onclick", "openModal()");
        }
      });
